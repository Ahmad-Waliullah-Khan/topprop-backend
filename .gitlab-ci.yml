image: node:12

variables:
    POSTGRES_DB: test_top_prop
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: password

stages:
    - build
    - test
    - deployStaging
    - deployProduction

cache:
    paths:
        - node_modules/

buildingApp:
    stage: build
    only:
        - staging
        - master
    script:
        - npm install
    artifacts:
        paths:
            - node_modules/

testing:
    stage: test
    only:
        - staging
        - master
    before_script:
        - docker pull postgres:latest
        - docker run -p 5432:5432 --name pg-docker -e POSTGRES_DB=$POSTGRES_DB -e POSTGRES_USER=$POSTGRES_USER -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD -d postgres:latest
    script: npm test
    after_script:
        - docker container stop $(docker container ls -aq)
        - docker container rm $(docker container ls -aq)

deployToStaging:
    stage: deployStaging
    only:
        - staging
    before_script:
        # Generates to connect to the AWS unit the SSH key.
        # Ensure we have .ssh folder under the gitlab-runner user
        - mkdir -p ~/.ssh
        # Attach the SSH_KEY value to the gitlab-runner user key
        - echo -e "$STAGING_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        # Add this to prevent instance asks for confirm adding to know_sites
        - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
        # Change .ssh/config folder owner to the gitlab-runner
        - chown $USER ~/.ssh/config
        # Sets the permission to 600 to prevent a problem with AWS that it’s too unprotected.
        - chmod 600 ~/.ssh/id_rsa
    script:
        - bash ./deployment-scripts/.deploy-staging.sh
    after_script:
        - docker system prune --volumes -a -f

deployToProduction:
    stage: deployProduction
    only:
        - master
    before_script:
        # Generates to connect to the AWS unit the SSH key.
        # Ensure we have .ssh folder under the gitlab-runner user
        - mkdir -p ~/.ssh
        # Attach the SSH_KEY value to the gitlab-runner user key
        - echo -e "$PRODUCTION_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        # Add this to prevent instance asks for confirm adding to know_sites
        - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
        # Change .ssh/config folder owner to the gitlab-runner
        - chown $USER ~/.ssh/config
        # Sets the permission to 600 to prevent a problem with AWS that it’s too unprotected.
        - chmod 600 ~/.ssh/id_rsa
    script:
        - bash ./deployment-scripts/.deploy-production.sh
    after_script:
        - docker system prune --volumes -a -f
